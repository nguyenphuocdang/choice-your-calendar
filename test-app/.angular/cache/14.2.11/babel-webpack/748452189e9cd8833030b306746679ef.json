{"ast":null,"code":"/**\n * @internal\n */\nexport function augmentWebsocket(webSocket, debug) {\n  webSocket.terminate = function () {\n    const noOp = () => {}; // set all callbacks to no op\n\n\n    this.onerror = noOp;\n    this.onmessage = noOp;\n    this.onopen = noOp;\n    const ts = new Date();\n    const id = Math.random().toString().substring(2, 8); // A simulated id\n\n    const origOnClose = this.onclose; // Track delay in actual closure of the socket\n\n    this.onclose = closeEvent => {\n      const delay = new Date().getTime() - ts.getTime();\n      debug(`Discarded socket (#${id})  closed after ${delay}ms, with code/reason: ${closeEvent.code}/${closeEvent.reason}`);\n    };\n\n    this.close();\n    origOnClose?.call(webSocket, {\n      code: 4001,\n      reason: `Quick discarding socket (#${id}) without waiting for the shutdown sequence.`,\n      wasClean: false\n    });\n  };\n}","map":{"version":3,"names":["augmentWebsocket","webSocket","debug","terminate","noOp","onerror","onmessage","onopen","ts","Date","id","Math","random","toString","substring","origOnClose","onclose","closeEvent","delay","getTime","code","reason","close","call","wasClean"],"sources":["C:/Users/Admins/Desktop/New folder/test-app/node_modules/@stomp/stompjs/esm6/augment-websocket.js"],"sourcesContent":["/**\n * @internal\n */\nexport function augmentWebsocket(webSocket, debug) {\n    webSocket.terminate = function () {\n        const noOp = () => { };\n        // set all callbacks to no op\n        this.onerror = noOp;\n        this.onmessage = noOp;\n        this.onopen = noOp;\n        const ts = new Date();\n        const id = Math.random().toString().substring(2, 8); // A simulated id\n        const origOnClose = this.onclose;\n        // Track delay in actual closure of the socket\n        this.onclose = closeEvent => {\n            const delay = new Date().getTime() - ts.getTime();\n            debug(`Discarded socket (#${id})  closed after ${delay}ms, with code/reason: ${closeEvent.code}/${closeEvent.reason}`);\n        };\n        this.close();\n        origOnClose?.call(webSocket, {\n            code: 4001,\n            reason: `Quick discarding socket (#${id}) without waiting for the shutdown sequence.`,\n            wasClean: false,\n        });\n    };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,gBAAT,CAA0BC,SAA1B,EAAqCC,KAArC,EAA4C;EAC/CD,SAAS,CAACE,SAAV,GAAsB,YAAY;IAC9B,MAAMC,IAAI,GAAG,MAAM,CAAG,CAAtB,CAD8B,CAE9B;;;IACA,KAAKC,OAAL,GAAeD,IAAf;IACA,KAAKE,SAAL,GAAiBF,IAAjB;IACA,KAAKG,MAAL,GAAcH,IAAd;IACA,MAAMI,EAAE,GAAG,IAAIC,IAAJ,EAAX;IACA,MAAMC,EAAE,GAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd,GAAyBC,SAAzB,CAAmC,CAAnC,EAAsC,CAAtC,CAAX,CAP8B,CAOuB;;IACrD,MAAMC,WAAW,GAAG,KAAKC,OAAzB,CAR8B,CAS9B;;IACA,KAAKA,OAAL,GAAeC,UAAU,IAAI;MACzB,MAAMC,KAAK,GAAG,IAAIT,IAAJ,GAAWU,OAAX,KAAuBX,EAAE,CAACW,OAAH,EAArC;MACAjB,KAAK,CAAE,sBAAqBQ,EAAG,mBAAkBQ,KAAM,yBAAwBD,UAAU,CAACG,IAAK,IAAGH,UAAU,CAACI,MAAO,EAA/G,CAAL;IACH,CAHD;;IAIA,KAAKC,KAAL;IACAP,WAAW,EAAEQ,IAAb,CAAkBtB,SAAlB,EAA6B;MACzBmB,IAAI,EAAE,IADmB;MAEzBC,MAAM,EAAG,6BAA4BX,EAAG,8CAFf;MAGzBc,QAAQ,EAAE;IAHe,CAA7B;EAKH,CApBD;AAqBH"},"metadata":{},"sourceType":"module"}